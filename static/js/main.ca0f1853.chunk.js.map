{"version":3,"sources":["WeatherComponent.js","Settings.js","TimeAndDate.js","Main.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherComponent","props","className","icon","name","value","Settings","data","openEditor","type","checked","changeTemp","onChange","console","log","temperature","changeData","toString","split","indexOf","Math","round","parseFloat","temperatureMax","temperatureMin","feels_like","changePress","pressure","changeWindSpeed","windSpeed","toFixed","onClick","TimeAndDate","weekDay","time","timezone","finalhour","Date","getTime","getTimezoneOffset","getHours","finalMinute","getMinutes","date","finalday","getDay","getDate","finalmonth","getMonth","finalyear","getFullYear","getYear","Main","state","city","weatherOverview","weather","main","temp","temp_max","temp_min","humidity","wind","speed","windDegree","deg","visibility","sunrise","sys","sunset","bind","setState","this","floor","dt","nextProps","prevProps","JSON","stringify","React","Component","Search","useState","val","setVal","e","target","onKeyPress","event","key","getData","blur","xlinkHref","App","setData","styleName","setStyleName","cityName","a","url","fetch","response","ok","json","obj","alert","useEffect","currTime","sunSetTime","sunRiseTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca0f1853.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction WeatherComponent(props){\r\n\r\n    return(<div className=\"weather-details__item\">\r\n        <p>{props.icon}</p>\r\n        <p>{props.name}</p>\r\n        <p>{props.value}</p>\r\n    </div>)\r\n}\r\n\r\nexport default WeatherComponent","import React, {useState} from 'react';\r\n\r\nfunction Settings(props){\r\n\r\n\r\n \r\n\r\nfunction tempreture(){\r\nconsole.log(props.data.temperature) \r\nprops.changeData({changeTemp: !props.data.changeTemp})\r\nconsole.log(props.data.changeTemp)\r\nif(props.data.changeTemp && (props.data.temperature).toString().split('').indexOf('C') === -1){\r\n   props.changeData({\r\n       temperature: Math.round((parseFloat(props.data.temperature)- 32) * 5/9) + \"°C\",\r\n       temperatureMax: Math.round((parseFloat(props.data.temperatureMax)- 32) * 5/9) + \"°C\",\r\n       temperatureMin: Math.round((parseFloat(props.data.temperatureMin)- 32) * 5/9) + \"°C\",\r\n       feels_like: Math.round((parseFloat(props.data.feels_like)- 32) * 5/9) + \"°C\",\r\n    }) \r\n} else if(!props.data.changeTemp){\r\n   props.changeData({\r\n       temperature: Math.round(parseFloat(props.data.temperature)*9/5 + 32) + \"°F\",\r\n       temperatureMax: Math.round(parseFloat(props.data.temperatureMax)*9/5 + 32) + \"°F\",\r\n       temperatureMin: Math.round(parseFloat(props.data.temperatureMin)*9/5 + 32) + \"°F\",\r\n       feels_like: Math.round(parseFloat(props.data.feels_like)*9/5 + 32) + \"°F\",\r\n    }) \r\n}\r\n    \r\n}\r\n\r\nfunction pressure(){\r\n    console.log(props.data.changePress)\r\n    console.log(props.data.pressure)\r\n    props.changeData({changePress: !props.data.changePress})\r\n    if(props.data.changePress){\r\n        props.changeData({\r\n            pressure: Math.round(parseFloat(props.data.pressure) / 0.75) + ' hPa'\r\n        })\r\n    }else if(!props.data.changePress){\r\n        props.changeData({\r\n            pressure: Math.round(parseFloat(props.data.pressure) *0.75) + ' mmHg'\r\n        })\r\n    }\r\n}\r\nfunction windSpeed(){\r\n    console.log(props.data.changeWindSpeed)\r\n    console.log(props.data.windSpeed)\r\n    props.changeData({changeWindSpeed:!props.data.changeWindSpeed})\r\n    if(props.data.changeWindSpeed){\r\n        props.changeData({\r\n            windSpeed: (parseFloat(props.data.windSpeed,2) / 3.6).toFixed(1) + ' m/s'\r\n        })\r\n    }else if(!props.data.changeWindSpeed){\r\n        props.changeData({\r\n            windSpeed: (parseFloat(props.data.windSpeed,2) *3.6).toFixed(1) + ' km/h'\r\n        })\r\n    }\r\n}\r\n\r\n\r\n    return(\r\n        <div className={props.data.openEditor?'settings open':\"settings\"} >\r\n           <div className={props.data.openEditor? 'settings__menu open': 'settings__menu'}>\r\n               <h2>Settings</h2>\r\n               <div className='settings__menu-item' >\r\n                   <p>Celsius</p>\r\n                  <label className='settings__menu-item-inner'>\r\n              \r\n                    <input type='checkbox' checked={props.data.changeTemp} onChange={tempreture}/>\r\n               \r\n                    <div>\r\n                        <span></span>\r\n                    </div>\r\n\r\n                </label>\r\n                  <p>Fahrenheit</p>\r\n               </div>\r\n               \r\n    \r\n               <div className='settings__menu-item' >\r\n                 <p>hPa</p>\r\n                 <label  className='settings__menu-item-inner'>\r\n                    <input type='checkbox' checked={props.data.changePress} onChange={pressure}/>\r\n                    <div>\r\n                        <span></span>\r\n                    </div>\r\n                 </label>\r\n                 <p>mmHg</p>\r\n               </div>\r\n    \r\n               <div className='settings__menu-item'>\r\n                 <p>m/s</p>\r\n                 <label className='settings__menu-item-inner'>\r\n                    <input type='checkbox' checked={props.data.changeWindSpeed} onChange={windSpeed}/>\r\n                    <div>\r\n                        <span></span>\r\n                    </div>\r\n                 </label>\r\n                 <p>km/h</p>\r\n               </div>\r\n\r\n            </div>\r\n\r\n            \r\n            <label className=\"settings__button\">\r\n                <input type=\"checkbox\"  onClick={()=>props.changeData({openEditor: !props.data.openEditor})} checked={props.data.openEditor? true: false} />\r\n              <div className=\"settings__button-design-item \">\r\n                  <i className='fas fa-cog'></i>\r\n              </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\n\r\nfunction TimeAndDate(props){\r\n\r\n    let weekDay = ['sunday','monday', 'tuesday', 'wednesday', 'thusday', 'friday', 'saturday'];\r\n    function getYear(time,timezone){\r\n        let finalyear = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getFullYear();\r\n        if(finalyear < 10) finalyear = '0'+ finalyear;\r\n        return finalyear;\r\n       }\r\n\r\n    function getMonth(time,timezone){\r\n        let finalmonth = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getMonth() + 1;\r\n        if(finalmonth < 10) finalmonth = '0'+ finalmonth;\r\n        return finalmonth;\r\n       }\r\n\r\n    function getDate(time,timezone){\r\n        let finalday = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getDate();\r\n        if(finalday < 10) finalday = '0'+ finalday;\r\n        return finalday;\r\n       }\r\n\r\n    function getDay(time,timezone){\r\n        let finalday = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getDay();\r\n        finalday = weekDay[finalday];\r\n        return finalday;\r\n       }\r\n\r\n    function getHours(time,timezone){\r\n        let finalhour = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getHours();\r\n        if(finalhour < 10) finalhour = '0'+ finalhour;\r\n        return finalhour;\r\n       }\r\n       \r\n       \r\n    function getMinutes(time,timezone){\r\n        let finalMinute = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getMinutes();\r\n        if(finalMinute < 10) finalMinute = '0'+ finalMinute;\r\n        return finalMinute;\r\n       }\r\n\r\n\r\n    let time = <span>{\r\n        getHours(props.time, props.timezone)\r\n        + ':' +\r\n        getMinutes(props.time, props.timezone)\r\n        }</span>\r\n\r\n    let date = <span>{\r\n        getDay(props.time, props.timezone)\r\n        + ' ' +\r\n        getDate(props.time, props.timezone)\r\n        + '.' +\r\n        getMonth(props.time, props.timezone)\r\n        + '.' +\r\n        getYear(props.time, props.timezone)\r\n        }</span>\r\n\r\n    return(<div className=\"weather__time-date\">\r\n        <p>the weather is actual on {time}</p>\r\n        <p>today is {date}</p>\r\n    </div>)\r\n}\r\n\r\nexport default TimeAndDate","import React from 'react';\r\nimport WeatherComponent from './WeatherComponent.js';\r\nimport Settings from './Settings.js';\r\nimport TimeAndDate from './TimeAndDate.js';\r\n\r\n\r\n\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n      data : props.data,\r\n      city: props.data.name,\r\n      weatherOverview: props.data.weather[0].main,\r\n      temperature: Math.round(props.data.main.temp - 273.15) + '°C',\r\n      temperatureMax: Math.round(props.data.main.temp_max - 273.15) + '°C',\r\n      temperatureMin: Math.round(props.data.main.temp_min - 273.15) + '°C',\r\n      feels_like: Math.round(props.data.main.feels_like - 273.15) + '°C',\r\n      humidity:props.data.main.humidity,\r\n      pressure:props.data.main.pressure + ' hPa',\r\n      windSpeed: props.data.wind.speed + ' m/s',\r\n      windDegree: props.data.wind.deg,\r\n      visibility: props.data.visibility,\r\n      sunrise: new Date(props.data.sys.sunrise * 1000),\r\n      sunset: new Date(props.data.sys.sunset * 1000),\r\n      timezone: props.data.timezone,\r\n      openEditor: false,\r\n      changeTemp: false,\r\n      changePress:false,\r\n      changeWindSpeed:false,\r\n\r\n      }\r\nthis.getHours = this.getHours.bind(this);\r\nthis.getMinutes = this.getMinutes.bind(this);\r\nthis.setState = this.setState.bind(this);\r\n    }\r\n  \r\n  static getDerivedStateFromProps(nextProps, prevProps){\r\n    console.log(prevProps.data);\r\n    console.log(nextProps.data);\r\n    \r\n    if(JSON.stringify(nextProps.data)!== JSON.stringify(prevProps.data)){\r\n      return{\r\n        data: nextProps.data,\r\n        city: nextProps.data.name,\r\n        weatherOverview: nextProps.data.weather[0].main,\r\n        temperature: Math.round(nextProps.data.main.temp - 273.15) + '°C',\r\n        temperatureMax: Math.round(nextProps.data.main.temp_max - 273.15) + '°C',\r\n        temperatureMin: Math.round(nextProps.data.main.temp_min - 273.15) + '°C',\r\n        feels_like: Math.round(nextProps.data.main.feels_like - 273.15) + '°C',\r\n        humidity: nextProps.data.main.humidity,\r\n        pressure: nextProps.data.main.pressure + ' hPa',\r\n        windSpeed: nextProps.data.wind.speed + ' m/s',\r\n        windDegree: nextProps.data.wind.deg,\r\n        visibility: nextProps.data.visibility,\r\n        sunrise: new Date(nextProps.data.sys.sunrise * 1000),\r\n        sunset: new Date(nextProps.data.sys.sunset * 1000),\r\n        timezone: nextProps.data.timezone,\r\n        openEditor: false,\r\n        changeTemp: false,\r\n        changePress:false,\r\n        changeWindSpeed:false,\r\n        \r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\ngetHours(time,timezone){\r\n let finalhour = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getHours();\r\n if(finalhour < 10) finalhour = '0'+ finalhour;\r\n return finalhour;\r\n}\r\n\r\n\r\ngetMinutes(time,timezone){\r\n let finalMinute = new Date((new Date(time).getTime() + new Date(time).getTimezoneOffset() * 60000) + 1000 * timezone).getMinutes();\r\n if(finalMinute < 10) finalMinute = '0'+ finalMinute;\r\n return finalMinute;\r\n}\r\n\r\n  render(){\r\nconsole.log(this.state)\r\n    return (<div className='weather'>\r\n\r\n      <div className=\"weather__city\">\r\n        <h1>{this.state.city}</h1>\r\n      </div>\r\n\r\n      <div className=\"weather__overview\">\r\n        <p>{this.state.weatherOverview}</p>\r\n      </div>\r\n\r\n      <div className=\"weather__temperature\">\r\n        <h1>{this.state.temperature}</h1>\r\n      </div>\r\n\r\n      <div className=\"weather__feels-like\">\r\n        <p> <i className=\"fas fa-thermometer-three-quarters\"></i> feels like: {this.state.feels_like}</p>\r\n      </div>\r\n\r\n      <div className=\"weather__temperature-h-l\">\r\n        <p> <i className=\"fas fa-temperature-high\"></i> H: {this.state.temperatureMax}</p>\r\n        <p> <i className=\"fas fa-temperature-low\"></i> L: {this.state.temperatureMin}</p>\r\n      </div>\r\n\r\n      <div className=\"weather-details\">\r\n        <WeatherComponent icon={<i className=\"fas fa-tint\"></i>} name={\"humidity\"} value={this.state.humidity + \" %\"} />\r\n        <WeatherComponent icon={<i className=\"fas fa-tachometer-alt\"></i>} name={\"pressure\"} value={this.state.pressure} />\r\n        <WeatherComponent icon={<i className=\"fas fa-sun\"></i>} name={\"sunrise\"} value={this.getHours(this.state.sunrise,this.state.timezone) + ':' + this.getMinutes(this.state.sunrise,this.state.timezone)} />\r\n        <WeatherComponent icon={<i className=\"fas fa-wind\"></i>} name={\" wind\"} value={this.state.windSpeed} />\r\n        <WeatherComponent icon={<i className=\"fas fa-eye\"></i>} name={\"visibility\"} value={Math.floor(this.state.visibility/1000) + ' km'} />\r\n        <WeatherComponent icon={<i className=\"fas fa-moon\"></i>} name={\"sunset\"} value={this.getHours(this.state.sunset,this.state.timezone) + ':' + this.getMinutes(this.state.sunset,this.state.timezone)} />\r\n\r\n      </div>\r\n      \r\n      <Settings data={this.state} changeData={this.setState} />\r\n      <TimeAndDate time={this.state.data.dt*1000} timezone={this.state.data.timezone} />\r\n      \r\n      </div>)\r\n  }\r\n}\r\n\r\n  export default Main;","import React, {useState} from 'react';\r\n\r\n\r\n\r\nfunction Search(props) {\r\n\r\n const [val, setVal] = useState(null);\r\n\r\n\r\nfunction typingSearch(event){\r\n setVal(event.target.value);\r\n}\r\n\r\n\r\nfunction changeCityVal(event){\r\n  if(event.key===\"Enter\"){\r\n    props.getData(val);\r\n   setVal(null)\r\n   event.target.blur();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n \r\n  \r\n    return (\r\n    <div className={props.data?'search-form':'search-form start'}>\r\n      <div className=\"search-form__inner\">\r\n       <input\r\n        type=\"text\" \r\n        value={val? val: ''} \r\n        onChange={(e) => typingSearch(e)} \r\n        onKeyPress={(e)=>changeCityVal(e)}\r\n\r\n        className=\"search_input\"\r\n        \r\n       />\r\n       <div className=\"search-form__symbol\">\r\n         <svg className=\"search-form__cloud\">\r\n           <use xlinkHref=\"#cloud\" />\r\n         </svg>\r\n         <svg className=\"search-form__lens\"  >\r\n           <use xlinkHref=\"#lens\" />\r\n         </svg>\r\n       </div>\r\n      </div>\r\n    </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Search","import React, {useState, useEffect} from 'react';\nimport Main from './Main.js';\nimport Search from './Search.js';\nimport './App.scss';\n\n\n\n\n\n\n\n\nfunction App() {\n\n\n  const [data, setData] = useState(null);\n  const [styleName, setStyleName] = useState(null);\n\n\n  async function getData(cityName){\n    \n      const url = 'https://api.openweathermap.org/data/2.5/weather?q='+ cityName +'&appid=c3d467c5c628f384f17f356b16b776d1';\n    const response = await fetch(url);\n    console.log(response)\n    if(response.ok){\n      const obj = await response.json();\n    setData( await obj);\n    console.log( new Date((new Date(obj.dt*1000).getTime() + new Date(obj.dt*1000).getTimezoneOffset() * 60000) + 1000 * obj.timezone).getHours());\n\n    console.log(obj);\n    } else {\n      alert('try another city')\n    }\n\n  }\n\n\nconsole.log(data)\n\n\nuseEffect(()=>{\n\nif(data){\n\n  let weather = data.weather[0].main;\n  let currTime = new Date((new Date(data.dt * 1000).getTime() + new Date(data.dt * 1000).getTimezoneOffset() * 60000) + 1000 * data.timezone).getHours()\n  let sunSetTime = new Date((new Date(data.sys.sunset * 1000).getTime() + new Date(data.sys.sunset * 1000).getTimezoneOffset() * 60000) + 1000 * data.timezone).getHours()\n  let sunRiseTime = new Date((new Date(data.sys.sunrise * 1000).getTime() + new Date(data.sys.sunrise * 1000).getTimezoneOffset() * 60000) + 1000 * data.timezone).getHours()\n\n\n  if(weather === 'Clear' && (currTime < sunSetTime && currTime > sunRiseTime)){\n     setStyleName('container clear-sky_day');\n  }else if(weather === 'Clear' && (currTime > sunSetTime ||currTime<sunRiseTime)){\n    setStyleName('container clear-sky_night');\n  }else if(weather === 'Clouds' || weather === 'Snow' || weather === 'Drizzle' || weather === 'Rain'|| weather == 'Mist'){\n    setStyleName('container rainy');\n  }\n}\n\n},[data])\n\n\n\n\n  return (\n    <div className={styleName}> \n      <Search data={data} getData={getData} />\n      {data? <Main data={data} />: ''}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}